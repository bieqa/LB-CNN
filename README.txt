This package performs the Laplace-Beltrami CNN (LB-CNN) and spectral graph CNN  
(graph-CNN) with Chebyshev, Laguerre, and Hermite polynomial approximation [1].

Some parts of the package are based on the open-source software in [2] 
(https://github.com/mdeff/cnn_graph) and [3] (https://bieqa.github.io/deeplearning.html).

EXAMPLE.py is an example of LB-CNN using 3 convolutional layers and Chebyshev 
polynomial approximation of order 7 for classification. 

One can change the network architecture and hyper-parameters (such as 
LB or graph Laplacian, polynomial type and order, number of convolutional 
layers, number of filters, etc.) freely in the beginning of EXAMPLE.py.

The LB-operator and graph Laplacian can be generated by the provided MATLAB 
package (matlab-LB) [4,5]


To run EXAMPLE.py, one need to prepare some input data in advance.
----------------------------------------------------------------
Input data: 
    ./data/data.m: surface data, including 
                    'data_test'         dimension x (testing size);
                    'data_trainvalid'   dimension x (train+validation size); 
                    'label_test'        1 x (testing size), value=0 or 1;
                    'label_trainvalid'  1 x (train+validation size), value=0 or 1.

    ./data/adjacency_LB.mat or adjacency_gL.mat: 
                    sparse adjacency matrix of LB-operator or graph Laplacian,
                    generated by the provided MATLAB package
---------------------------------------------------------------
Output results: 
    ./result/?/performance_test.csv: 
                    testing performance (accuracy, sensitivity, specificity, ...)    

    ./result/?/label_test.csv: 
                    predicted labels of testing set

    ./result/?/performance_trainvalid.csv:
                    training and validation performance
    
    other output files are saved for future use (e.g. transfer learning) 
----------------------------------------------------------------


References:
[1] Huang S.-G., Chung, M.K. and Qiu, A. Revisiting convolutional neural network 
on graphs with polynomial approximations of Laplace-Beltrami spectral filtering. 
Under review.

[2] Defferrard, M., Bresson, X. and Vandergheynst, P. "Convolutional neural 
networks on graphs with fast localized spectral filtering." 
In Advances in neural information processing systems, pp. 3844-3852. 2016.

[3] Liu, C., Ji, H. and Qiu, A. Convolutional Neural Network on Semi-Regular 
Triangulated Meshes and its Application to Brain Image Data. arXiv preprint 
arXiv:1903.08828, 2019.

[4] Huang, S.-G., Lyu, I., Qiu, A., & Chung, M.K.: Fast Polynomial Approximation 
of Heat Kernel Convolution on Manifolds and Its Application to Brain Sulcal and 
Gyral Graph Pattern Analysis. IEEE Transactions on Medical Imaging, 39(6), 2201-2212, 2020.

[5] Tan, M., Qiu, A.: Spectral Laplace-Beltrami wavelets with applications
in medical images. IEEE Transactions on Medical Imaging 34, 1005-1017, 2015

